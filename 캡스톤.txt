from selenium import webdriver
import requests
import json
import pandas as pd 

driver = webdriver.Chrome()

driver.get("https://land.naver.com") 

headers = {  #부동산화면의 헤더
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IlJFQUxFU1RBVEUiLCJpYXQiOjE2NDk5NDc4OTYsImV4cCI6MTY0OTk1ODY5Nn0.IHj3PTF0ebjIftDUkUrUnbb4ntzIeqc14Ioouz7CbhE",    
    "Connection": "keep-alive",
    "Referer": "https://new.land.naver.com/complexes/881?ms=37.4840693,127.0624236,16&a=APT:ABYG:JGC&e=RETAIL",
    "Sec-Fetch-Dest": "empty",
    "Sec-Fetch-Mode": "cors",
    "Sec-Fetch-Site": "same-origin",
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36"
}
#url 정의
url = "https://new.land.naver.com/api/complexes/3039/prices?complexNo=3039&tradeType=A1&year=5&priceChartChange=false&type=chart"
url2 = "https://new.land.naver.com/api/complexes/881?complexNo=881&initial=Y"

res = requests.get(url2, headers=headers)
data_dict =  res.json() #딕셔너리형태로 json 정의
data_dict.keys() #keys값 출력 
for k, v in data_dict.items(): #for 문으로 photos와 같은것이 보이면 멈추고 k,v값 출력
    if k == 'photos':
        continue
    print(k, v)
for url in url_list: #list로 정의한 헤더,url의 값을 출력 
    res = requests.get(url, headers=headers)
    data_dict = res.json()

    for k, v in data_dict.items():
        k, v
    
    print(k, v)
import pandas as pd #2차원의 형태로 보여주는 모듈
i = 60
for _ in range(10):
    url = "https://new.land.naver.com/api/complexes/3039/prices?complexNo=3039&tradeType=A1&year=5&priceChartChange=false&areaNo=1&addedRowCount=4&provider=kab&showMorePriceTable=true&type=table".format(i)

    res = requests.get(url, headers=headers)
    data_dict =  res.json()

    pd.DataFrame(data_dict['marketPrices']) #가격 데이터값 정의 매매시세(실거래x)
    count = len(data_dict['marketPrices'])
    i = i + count
complex_id = 3058
# complex_id = 28

url = "https://new.land.naver.com/api/complexes/{}?sameAddressGroup=false".format(complex_id)
res = requests.get(url, headers=headers)

data_dict = res.json()
data_dict.keys()

complex_detail_df = pd.Series(data_dict['complexDetail']).to_frame().T
complex_detail_df #complexdetail 정보 딕셔너리형태로 보여준다 

print(complex_detail_df) #컬럼이 영어라 읽기가 어려워 한글로 번역하기위해 프린트했다
complex_detail_df.columns #컬럼 인덱스를 보기쉽게 출력해봄

complex_detail_df.columns = (['번호','이름','가격','아파트','번호','이름','가격','아파트','번호','이름','가격','아파트','번호','이름','가격','아파트','번호','이름','가격','아파트','번호','이름','가격','아파트','번호','이름','가격','아파트','번호','이름','가격','아파트','번호','이름','가격','아파트','번호','이름'])
complex_detail_df #compelx detail 컬럼을 리스트형태로 한글번역해 기입

